# -*- coding: utf-8 -*-
"""Раздел_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HMMiDgE94n-5e9u9Wks6iBIFJsXolG_1

Зададие 1
"""

from random import randint
digit_1 = randint(0, 100)
digit_2 = randint(0, 100)
digit_3 = randint(0, 100)
average = (digit_1 + digit_2 + digit_3) / 3
print(digit_1, digit_2, digit_3, round(average, 2), sep = "\n")

"""Задание 2

"""

digit_1 = randint(0, 100)
digit_2 = randint(0, 100)
division = digit_1 // digit_2
remainder = digit_1 % digit_2
print(digit_1, digit_2, f"{division}, {remainder}", sep = "\n")

"""Задание 3"""

x = 14.721
print(round(x, 2), round(x), f'{x:012}', sep = "\n")

"""Задание 4 (Можно сделать через перебор строки через for, так даже проще, как по мне. Но такой вопрос, чем больше число, тем больше памяти будет занимать, соответсвенно каким способом будет лучше и оптимальнее?)

"""

values = (325, -234, 0)
for value in values:
  flag = False
  reverse_value = 0
  print(value, end = "")
  if value < 0:
    flag = True
    value *= -1
  while value != 0:
    digit = value % 10
    reverse_value = reverse_value * 10 + digit
    value //= 10
  if flag:
    reverse_value *= -1
    print(f" -> {reverse_value}")
  else:
    print(f" -> {reverse_value}")

"""Задание 5"""

values = (325, -234, -2147483648)
for value in values:
  flag = False
  reverse_value = 0
  print(value, end = "")
  if value < 0:
    flag = True
    value *= -1
# Меньше 34 в while, так как метод bin выводит 0b001    
  if  len(bin(value)) < 34:
    while value != 0:
      digit = value % 10
      reverse_value = reverse_value * 10 + digit
      value //= 10
    if flag:
      reverse_value *= -1
      print(f" -> {reverse_value}")
    else:
      print(f" -> {reverse_value}")  
  else:
    print(f" - > {reverse_value}")